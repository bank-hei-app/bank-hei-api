openapi: '3.0.3'
info:
  title: Digital Banking in Madagascar
  version: 1.0.0
servers:
  - url: https://DBM.com
tags: 
  - name: Account
  - name: Transfer
  - name: Bank
  - name: TransferList
paths:
  /account:
    get:
      tags:
        - Account
      summary: Get All accounts
      description: The Returned books are ordered by name  
      operationId: getAccounts
      responses:
        200: 
          $ref: '#/components/responses/200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
                

    post:
      tags: 
        - Account
      summary: Create a new Account
      operationId: CreateAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInput'
      responses: 
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
    put:
      tags: 
        - Account
      parameters:
        - in: path
          name: account_Id
          required: true 
          schema: 
            type: string 
      requestBody: 
        required: true
        content:
          application/json: 
            schema: 
               $ref: '#/components/schemas/AccountInput'
      responses:
        200: 
          description: Account updated successfully
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Account'
        201: 
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400: 
           $ref: '#/components/responses/400'
          
  /transfer:
    post:
      summary: Create a new Transfer 
      operationId: createTransfer
      tags:
        - Transfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank_transfer'
      responses:
        '201':  
          description: Transfer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_transfer'
        '400':
          $ref: '#/components/responses/400'
    get:
      summary: Retrieve a transfer by its ID
      operationId: getTransferById
      tags:
        - Transfer
      parameters:
        - in: path
          name: bank_transfer_Id
          required: true
          schema:
            type: string
          description: The ID of the transfer to retrieve
      responses:
        '200':
          description: Transfer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_transfer'
        '400':
          $ref: '#/components/responses/400'
    
  /transfer/{bank_transfer_Id}:  
    put: 
      summary: update Transfer by Id 
      operationId: updateTransferbyId
      tags:
        - Transfer
      parameters: 
        - in: path
          name: bank_transfer_Id
          required: true
          schema: 
            type: string
          description: The ID of the transfer to update 
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/Bank_transfer'
      responses:
        200:
          description: Transfer update successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_transfer' 
        400:
            $ref: '#/components/responses/400'   

    get:
      summary: Retrieve a transfer by  ID
      operationId: getTransferById
      tags:
        - Transfer
      parameters:
        - in: path
          name: bank_transfer_Id
          required: true
          schema:
            type: string
          description: The ID of the transfer to retrieve
      responses:
        '200':
          description: Transfer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_transfer'
        '400':
          $ref: '#/components/responses/400'

    delete:
      summary: Delete a transfer by its ID
      operationId: deleteTransferById
      tags:
        - Transfer
      parameters:
        - in: path
          name: bank_transfer_Id
          required: true
          schema:
            type: string
          description: The ID of the transfer to delete
      responses:
        '200':
          description: Transfer deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successfully'
        '400':
          $ref: '#/components/responses/400'  
  /bank:
    get:
      summary: Retrieve all banks
      operationId: getAllbanks
      tags:
        - Bank
      responses:
        '200':
          description: List of banks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'  
    post:
      summary: Create a new Bank
      operationId: createBank
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank'
      responses:
        '201':
          description: Bank created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '400':
          $ref: '#/components/responses/400'

  /bank/{bank_Id}:
    put:
      summary: Update a bank by ID
      operationId: updatebankById
      tags:
        - Bank
      parameters:
        - in: path
          name: bank_Id
          required: true
          schema:
            type: string
          description: The ID of the bank to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank'
      responses:
        '200':
          description: Bank updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '400':
          $ref: '#/components/responses/400'

    get:
      summary: Retrieve a bank by  ID
      operationId: getBankById
      tags:
        - Bank
      parameters:
        - in: path
          name: bank_Id
          required: true
          schema:
            type: string
          description: The ID of the bank to retrieve
      responses:
        '200':
          description: Bank retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '400':
          $ref: '#/components/responses/400'

    delete:
      summary: Delete a bank by  ID
      operationId: deleteBankById
      tags:
        - Bank
      parameters:
        - in: path
          name: bank_Id
          required: true
          schema:
            type: string
          description: The ID of the bank to delete
      responses:
        '200':
          description: Bank deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successfully'
        '400':
          $ref: '#/components/responses/400'

  /transferList:
    post: 
      summary: Create a new transfer list 
      operationId: createTransferList
      tags:
        - TransferList
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Bank_transfer_list'
      responses:
        '201':
          description: Transfer group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_transfer_list'
                
        '400':
          $ref: '#/components/responses/400'
            
    get:
      summary: Retrieve all transfer list 
      operationId: getAllTransferList
      tags:
        - TransferList
      responses:
        '200':
          description: List of transfer list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank_transfer_list'
  
  /transfertList/{TransferListId}:
    put:
      summary: Update a transfer list by ID
      operationId: updateTransferListbyId
      tags:
        - TransferList 
      parameters:
        - in: path
          name: bank_transfer_list_Id
          required: true
          schema: 
            type: string
          description: The Id of the transfer  list to update
      requestBody:
        required: true 
        content:
          application/json: 
            schema: 
              $ref: '#/components/schemas/Bank_transfer_list'
      responses:
        '200':
          description: Transfer group updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_transfer_list'
        '400':
          $ref: '#/components/responses/400' 
    
    delete: 
      summary: Delete a transfer list by ID
      operationId: deleteTransferListById
      tags:
        - TransferList 
      parameters:
        - in: path 
          name: bank_transfer_list_Id
          required: true
          schema:
            type: string
          description: The Id of transfer to delete 
      responses:
        '200':
          description: Transfer list deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successfully'
        '400':
          $ref: '#/components/responses/400'

    get:
      summary: Retrieve a transfer list by its ID
      operationId: getTransferListById
      tags:
        - TransferGroup
      parameters:
        - in: path
          name: bank_transfer_list_Id
          required: true
          schema:
            type: string
          description: The ID of the transfer list to retrieve
      responses:
        '200':
          description: Transfer list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank_transfer_list'
        '400':
          $ref: '#/components/responses/400'


components:
  responses: 
    200:
      description: Ok
      content: 
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Successfully'
    201:
      description: Created
      content: 
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Successfully'
    400:
      description: Bad Request
      content: 
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BadRequest'
    403:
      description: Forbidden
      content:
        application/json:
          schema: 
           type: array
           items:
            $ref: '#/components/schemas/Forbidden'

  schemas: 
    Account:
      type: object
      properties:
        account_Id:
          type: integer
        client_name:
          type: string
        client_last_name:
          type: string
        date_of_birth:
          type: string
          format: date
        net_salary_per_month:
          type: number
          format: double
      required:
        - bank_Id
          
    AccountInput:
      type: object
      properties:
        client_name:
          type: string
          example: 'Fifaliana'
        client_last_name:
          type: string 
          example: 'Koto'
        date_of_birth:
          type: string
          format: date 
          example: '2002-03-17'
        net_salary_per_month:
          type: number
          format: double
          example: 8000.00
        bank_Id: 
          type: integer
          example: 1

    Bank_transfer:
      type: object
      properties:
        bank_transfer_Id:
          type: integer
        date_make_effect:
          type: string
          format: timestamp
        date_register:
          type: string
          format: timestamp
        reference_unique:
          type: string
      required:
        - balance_category_Id
        - balance_type_Id     

    Bank: 
      type: object
      properties:
        bank_Id:
          type: integer
        bank_name:
          type: string     
          
    Bank_transfer_list:
      type: object
      properties:
        bank_transfer_list_Id:
          type: integer
        account_sender_Id:
          type: integer
        account_recipients_Id:
          type: integer
      required:
        - bank_transfer_Id
        - account_Id
    ResponseStatus:
      type: object
      properties: 
        code: 
          type: integer
          example: 200
        message: 
          type: string
          example: ok
    Successfully:
      type: object
      properties:
        message:
          type: string
          description: Returned successfully
        data:
          type: object 
    ResponseBodyTemplate:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        body:
          type: object
    BadRequest:
      allOf:
        - $ref: '#/components/schemas/ResponseBodyTemplate'
      example:
        status:
          code: 400
          message: BAD Request
        body: {} 
    Forbidden:
      allOf:
        - $ref: '#/components/schemas/ResponseBodyTemplate'
      example: 
        status:
          code: 403
          message: FORBIDEN 
        body: {}

       

  
   
